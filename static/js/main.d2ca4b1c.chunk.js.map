{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","backgroundColor","transform","media","height","paddingTop","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","MyCard","props","classes","React","useState","expanded","setExpanded","Card","className","CardHeader","Avatar","aria-label","monster","name","charAt","action","IconButton","title","subheader","email","CardMedia","image","CardContent","Typography","variant","color","component","company","catchPhrase","CardActions","disableSpacing","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","address","street","suite","city","zipcode","CardList","monsters","map","id","SearchBox","placeholder","handleChange","TextField","label","margin","InputProps","onChange","type","App","state","searchField","this","filteredMonsters","filter","toLowerCase","includes","e","setState","target","value","fetch","then","response","json","users","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2ca4b1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n     backgroundColor: \"#E8F4DA;\",\r\n    '&:hover': {\r\n       transform: \"scale3d(1.05, 1.05, 1)\",\r\n    },\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#62B1F6\",\r\n  },\r\n}));\r\n\r\nexport const MyCard = (props) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n   \r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"monster\" className={classes.avatar}>\r\n           {props.monster.name.charAt(0)}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        \r\n\r\n        title={props.monster.name}\r\n        subheader={props.monster.email}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={`https://robohash.org/${props.monster.email}?set=set8&size=180x180`}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n         {props.monster.company.catchPhrase}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Address:</Typography>\r\n          <Typography paragraph>\r\n           {props.monster.address.street}\r\n           {props.monster.address.suite}\r\n           {props.monster.address.city}\r\n            {props.monster.address.zipcode}\r\n          </Typography>\r\n         \r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport {MyCard} from '../card/card.component'\r\n\r\nexport const CardList = (props) =>(\r\n        <div className='card-list'>\r\n              {\r\n              props.monsters.map(monster => (\r\n                <MyCard key={monster.id} monster ={monster}></MyCard>\r\n              ))}\r\n        </div>\r\n    );","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './search-box.styles.css'\r\n\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n  return (\r\n    <div>\r\n          <TextField className='search-box'\r\n            label={placeholder}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputProps={{ placeholder: placeholder, onChange:handleChange, type: 'search' }}\r\n          />\r\n           </div>\r\n        )\r\n}\r\n\r\n\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport Container from \"@material-ui/core/Container\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  render() {\n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField;\n\n    //The above 2 lines can be simpliefied as\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div maxWidth=\"xl\" className=\"App\">\n        <h1>Monster Finder</h1>\n        <SearchBox\n          placeholder=\"Search Monster\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        {/* <CardList monsters={this.state.monsters}></CardList> */}\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}